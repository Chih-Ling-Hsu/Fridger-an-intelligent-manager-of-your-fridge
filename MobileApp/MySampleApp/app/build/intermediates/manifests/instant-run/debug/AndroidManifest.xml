<?xml version="1.0" encoding="utf-8"?>
<!--
 Copyright 2017 Amazon.com, Inc. or its affiliates (Amazon). All Rights Reserved.

 Code generated by AWS Mobile Hub. Amazon gives unlimited permission to
 copy, distribute and modify it.

 Source code generated from template: aws-my-sample-app-android v0.17
-->
<!--
 Note that the true APK package name comes from the build.gradle file, not from this
     entry for manifest. For more details, see:
     http://tools.android.com/tech-docs/new-build-system/applicationid-vs-packagename
-->
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="com.amazon.mysampleapp"
    android:versionCode="1"
    android:versionName="1.0" >

    <uses-sdk
        android:minSdkVersion="15"
        android:targetSdkVersion="24" />

    <uses-permission android:name="android.permission.INTERNET" />
    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
    <uses-permission android:name="android.permission.WAKE_LOCK" />
    <uses-permission android:name="android.permission.VIBRATE" />
    <uses-permission android:name="com.google.android.c2dm.permission.RECEIVE" />

    <permission
        android:name="com.amazon.mysampleapp.permission.C2D_MESSAGE"
        android:protectionLevel="signature" />

    <uses-permission android:name="com.amazon.mysampleapp.permission.C2D_MESSAGE" />
    <uses-permission android:name="android.permission.GET_ACCOUNTS" />
    <uses-permission android:name="android.permission.USE_CREDENTIALS" />
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />

    <application
        android:name="com.mysampleapp.Application"
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:supportsRtl="true"
        android:theme="@style/AppTheme" >
        <activity
            android:name="com.mysampleapp.SplashActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
            android:label="@string/app_name" >
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />

                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
        <activity
            android:name="com.mysampleapp.MainActivity"
            android:label="@string/title_activity_main"
            android:launchMode="singleInstance" >
        </activity>

        <!-- BEGIN - APP CONTENT DELIVERY AND USER DATA STORAGE -->


        <!--
         The following services and receivers are used to deal with transfer of
	     files. If you copy and paste the user data storage or app content delivery
	     feature from this sample app into your own app, make sure you include
	     these items, and customize the string identifiers they use in the strings
	     XML resource file.
        -->

        <service
            android:name="com.amazonaws.mobileconnectors.s3.transferutility.TransferService"
            android:enabled="true" />
        <service android:name="com.amazonaws.mobile.downloader.service.DownloadService" />

        <receiver
            android:name="com.amazonaws.mobile.downloader.service.NetworkStateListener"
            android:enabled="false"
            android:exported="false" >
            <intent-filter>
                <action android:name="android.net.conn.CONNECTIVITY_CHANGE" />
            </intent-filter>
        </receiver>

        <provider
            android:name="com.amazonaws.mobile.downloader.query.DownloadQueueProvider"
            android:authorities="@string/download_queue_provider_authority"
            android:enabled="true"
            android:exported="false" >
        </provider>
        <provider
            android:name="android.support.v4.content.FileProvider"
            android:authorities="@string/content_file_provider_authority"
            android:exported="false"
            android:grantUriPermissions="true" >
            <meta-data
                android:name="android.support.FILE_PROVIDER_PATHS"
                android:resource="@xml/content_delivery_paths" />
        </provider>

        <!-- END - APP CONTENT DELIVERY AND USER DATA STORAGE -->

        <meta-data
            android:name="com.google.android.gms.version"
            android:value="@integer/google_play_services_version" />

        <!-- BEGIN - PUSH NOTIFICATIONS WITH GOOGLE CLOUD MESSAGING (GCM) -->

        <receiver
            android:name="com.google.android.gms.gcm.GcmReceiver"
            android:exported="true"
            android:permission="com.google.android.c2dm.permission.SEND" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />

                <category android:name="@string/google_cloud_messaging_package" />
            </intent-filter>
        </receiver>

        <service
            android:name="com.mysampleapp.PushListenerService"
            android:exported="false" >
            <intent-filter>
                <action android:name="com.google.android.c2dm.intent.RECEIVE" />
            </intent-filter>
        </service>

        <!-- END - PUSH NOTIFICATIONS WITH GOOGLE CLOUD MESSAGING (GCM) -->

        <activity
            android:name="com.google.android.gms.auth.api.signin.internal.SignInHubActivity"
            android:excludeFromRecents="true"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <!--
Service handling Google Sign-In user revocation. For apps that do not integrate with
            Google Sign-In, this service will never be started.
        -->
        <service
            android:name="com.google.android.gms.auth.api.signin.RevocationBoundService"
            android:exported="true"
            android:permission="com.google.android.gms.auth.api.signin.permission.REVOCATION_NOTIFICATION" />

        <activity
            android:name="com.google.android.gms.common.api.GoogleApiActivity"
            android:exported="false"
            android:theme="@android:style/Theme.Translucent.NoTitleBar" />
        <activity
            android:name="com.amazonaws.mobilehelper.auth.signin.SignInActivity"
            android:configChanges="keyboard|keyboardHidden|orientation|screenSize"
            android:label="@string/title_activity_sign_in" >
        </activity>

        <provider
            android:name="com.android.tools.fd.runtime.InstantRunContentProvider"
            android:authorities="com.amazon.mysampleapp.com.android.tools.fd.runtime.InstantRunContentProvider"
            android:multiprocess="true" />
    </application>

</manifest>